plugins {
    id 'org.springframework.boot' version '2.7.12'
    id 'io.spring.dependency-management' version '1.0.15.RELEASE'
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-batch'
    runtimeOnly 'com.h2database:h2'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.batch:spring-batch-test'
}

tasks.named('test') {
    useJUnitPlatform()
}

tasks.register('jobDb', JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    mainClass = 'org.h2.tools.Console'

    def props = new Properties()

    file("src/main/resources/application-dev.properties").withInputStream { props.load(it) }

    args(
            '-driver', props.get('job-db.driver-class-name'),
            '-url', props.get('job-db.jdbc-url'),
            '-user', props.get('job-db.username')
    )
}

tasks.register('mainDb', JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    mainClass = 'org.h2.tools.Console'

    def props = new Properties()
    file("src/main/resources/application-dev.properties").withInputStream { props.load(it) }

    args(
            '-driver', props.get('main-db.driver-class-name'),
            '-url', props.get('main-db.jdbc-url'),
            '-user', props.get('main-db.username')
    )
}

tasks.register('db', JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    mainClass = 'org.h2.tools.Console'
}
